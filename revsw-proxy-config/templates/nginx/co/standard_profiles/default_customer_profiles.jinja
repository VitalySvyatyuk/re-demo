{% macro _base_filters(this) -%}
    # Begin base filters
    pagespeed EnableFilters add_head;
    pagespeed EnableFilters inline_import_to_link;
    pagespeed EnableFilters insert_ga;
    pagespeed EnableFilters remove_comments;
    pagespeed EnableFilters collapse_whitespace;
    pagespeed EnableFilters extend_cache;
    pagespeed EnableFilters extend_cache_pdfs;
    pagespeed EnableFilters remove_quotes;
    {# # We already use Boomerang, don't need this #}
    #pagespeed EnableFilters add_instrumentation;
    pagespeed EnableFilters convert_meta_tags;
    pagespeed EnableFilters insert_dns_prefetch;
    {#
    # Allow AJAX loaded resources to be optimized
    # See: https://developers.google.com/speed/pagespeed/module/system#ipro
    #}
    pagespeed InPlaceResourceOptimization on;
    {#
    # Filters to lower bandwidth usage
    #}
    pagespeed EnableFilters combine_heads;
    pagespeed EnableFilters elide_attributes;
    pagespeed EnableFilters trim_urls;
    # End base filters
{%- endmacro %}

{% macro profile_selection(this) -%}
{% if this.REV_OPTIMIZATION_LEVEL == "adaptive" -%}
    {#
    # TODO: implement
    #}
{% endif %}
    {#
    # Always use profile 0 by default
    # TODO: RevProfilesAddSelectionRule 0 1==1
    #}
{%- endmacro %}

{% macro _optimize_up_to_level(level) -%}
{% if level == "low" %}
{% set lvl = 1 %}
{% elif level == "medium" %}
{% set lvl = 2 %}
{% elif level == "high" %}
{% set lvl = 3 %}
{% else %}
{% set lvl = 0 %}
{% endif %}
{% if lvl >= 1 %}
{{ caller("low") }}
{% endif %}
{% if lvl >= 2 %}
{{ caller("medium") }}
{% endif %}
{% if lvl == 3 %}
{{ caller("high") }}
{% endif %}
{%- endmacro %}

{% macro _custom_js_optimizations(js_level) -%}
{% call(level) _optimize_up_to_level(js_level) %}
{% if level == "low" -%}
    # Begin custom JS optimizations - low
# See this bug: https://code.google.com/p/modpagespeed/issues/detail?id=821
#<pagespeed If spdy>;
#    pagespeed EnableFilters outline_javascript;
#</ModPagespeedIf>
    # End custom JS optimizations - low
{% elif level == "medium" %}
    # Begin custom JS optimizations - medium
    pagespeed EnableFilters extend_cache_scripts;
    pagespeed EnableFilters rewrite_javascript;
    #pagespeed UseExperimentalJsMinifier On;
# TODO: <pagespeed If !spdy>;
# TODO:     pagespeed EnableFilters inline_javascript;
# TODO: </ModPagespeedIf>
    # End custom JS optimizations - medium
{% elif level == "high" %}
    # Begin custom JS optimizations - high
    pagespeed EnableFilters defer_javascript;
    pagespeed EnableFilters combine_javascript;
    # Don't let PageSpeed externalize JS - all JS files must pass through the BP
    #pagespeed EnableFilters canonicalize_javascript_libraries;
    pagespeed EnableFilters make_google_analytics_async;
    # End custom JS optimizations - high
{% endif %}
{% endcall %}
{%- endmacro %}

{% macro _custom_css_optimizations(css_level) -%}
{% call(level) _optimize_up_to_level(css_level) %}
{% if level == "low" -%}
    # Begin custom CSS optimizations - low
    pagespeed EnableFilters move_css_above_scripts;
    pagespeed EnableFilters move_css_to_head;
# See this bug: https://code.google.com/p/modpagespeed/issues/detail?id=821
#<pagespeed If spdy>;
#    pagespeed EnableFilters outline_css;
#</ModPagespeedIf>
    pagespeed EnableFilters rewrite_style_attributes;
    # End custom CSS optimizations - low
{% elif level == "medium" %}
    # Begin custom CSS optimizations - medium
    pagespeed EnableFilters extend_cache_css;
    pagespeed EnableFilters combine_css;
# TODO: <pagespeed If !spdy>;
# TODO:     pagespeed EnableFilters inline_css;
# TODO: </ModPagespeedIf>
    pagespeed EnableFilters flatten_css_imports;
    pagespeed EnableFilters rewrite_css;
    pagespeed EnableFilters fallback_rewrite_css_urls;
    pagespeed EnableFilters rewrite_style_attributes_with_url;
    # End custom CSS optimizations - medium
{% elif level == "high" %}
    # Begin custom CSS optimizations - high
# TODO: <pagespeed If !spdy>;
# TODO:     pagespeed EnableFilters inline_google_font_css;
# TODO: </ModPagespeedIf>
    pagespeed EnableFilters prioritize_critical_css;
    # End custom CSS optimizations - high
{% endif %}
{% endcall %}
{%- endmacro %}

{% macro _custom_img_optimizations(img_level) -%}
{% call(level) _optimize_up_to_level(img_level) %}
{% if level == "low" -%}
    # Begin custom IMG optimizations - low
    pagespeed EnableFilters insert_image_dimensions;
    pagespeed EnableFilters dedup_inlined_images;
    # End custom IMG optimizations - low
{% elif level == "medium" %}
    # Begin custom IMG optimizations - medium
    pagespeed EnableFilters sprite_images;
    pagespeed EnableFilters extend_cache_images;
    pagespeed EnableFilters rewrite_images;
    #pagespeed EnableFilters convert_jpeg_to_progressive;
# TODO: <pagespeed If !spdy>;
# TODO:     pagespeed EnableFilters inline_images;
# TODO: </ModPagespeedIf>
    pagespeed EnableFilters recompress_images;
    pagespeed EnableFilters recompress_jpeg;
    pagespeed EnableFilters recompress_png;
    pagespeed EnableFilters recompress_webp;
    pagespeed EnableFilters convert_gif_to_png;
    pagespeed EnableFilters strip_image_color_profile;
    pagespeed EnableFilters strip_image_meta_data;
    pagespeed EnableFilters resize_images;
    pagespeed EnableFilters resize_rendered_image_dimensions;
    pagespeed EnableFilters lazyload_images;
    pagespeed CriticalImagesBeaconEnabled Off;

    pagespeed ImageRecompressionQuality 70;
    # End custom IMG optimizations - medium
{% elif level == "high" %}
    # Begin custom IMG optimizations - high
    pagespeed EnableFilters convert_png_to_jpeg;
    # webp conversion is costly and not all browsers support webp
    #pagespeed EnableFilters convert_jpeg_to_webp;
    #pagespeed EnableFilters inline_preview_images;
    pagespeed EnableFilters resize_mobile_images;
    # End custom IMG optimizations - high
{% endif %}
{% endcall %}
{%- endmacro %}

{% macro _custom_optimizations(this) -%}
    # Optimization level: Custom
    {{_custom_js_optimizations(this.REV_CUSTOM_JS_LEVEL)}}
    {{_custom_css_optimizations(this.REV_CUSTOM_CSS_LEVEL)}}
    {{_custom_img_optimizations(this.REV_CUSTOM_IMG_LEVEL)}}
    # End optimization level: Custom
{%- endmacro %}

{% macro _level_optimizations(level) -%}
    # Optimization level: {{level}}
    {{_custom_js_optimizations(level)}}
    {{_custom_css_optimizations(level)}}
    {{_custom_img_optimizations(level)}}
    # End optimization level: {{level}}
{%- endmacro %}

{% macro profile0(this) -%}
    {{_base_filters()}}
{% if this.REV_OPTIMIZATION_LEVEL == "min" %}
    {{_level_optimizations("low")}}
{% elif this.REV_OPTIMIZATION_LEVEL == "med" %}
    {{_level_optimizations("medium")}}
{% elif this.REV_OPTIMIZATION_LEVEL == "max" %}
    {{_level_optimizations("high")}}
{% elif this.REV_OPTIMIZATION_LEVEL == "custom" %}
    {{_custom_optimizations(this)}}
{% else %}{# including "adaptive", where profile0 means "don't optimize" #}
    # Optimizations turned off
{% endif %}
    # End optimizations
{%- endmacro %}

{% macro profile1(this) -%}
    {{_base_filters()}}
    {{_level_optimizations("low")}}
    # End optimizations
{%- endmacro %}

{% macro profile2(this) -%}
    {{_base_filters()}}
    {{_level_optimizations("medium")}}
    # End optimizations
{%- endmacro %}

{% macro profile3(this) -%}
    {{_base_filters()}}
    {{_level_optimizations("high")}}
    # End optimizations
{%- endmacro %}
