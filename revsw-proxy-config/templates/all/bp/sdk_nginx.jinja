#################################################\####################\\
##############################ADD CPOY right header here
##########################################################


upstream https_varnish_local {
		keepalive 32; # keep N connections alive
		server 127.0.0.1:8443 max_fails=0 fail_timeout=0;
}

server {
	listen 443 ssl http2;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA 3DES RC4 !aNULL !eNULL !LOW !MD5 !EXP !PSK !SRP !DSS +3DES 3DES +RC4 RC4";
	ssl_prefer_server_ciphers on;
	ssl_session_cache shared:SSL:10m;
	ssl_certificate /opt/revsw-config/apache/generic-site/certs/server-chained.crt;
	ssl_certificate_key /opt/revsw-config/apache/generic-site/certs/server.key;
	
	# display all the keys
	{%- for conf in all_configs -%}
		server_name {{conf.key}};

		if ($http_host == "{{conf.key}}") {
			proxy_set_header X-Rev-SDK-ClientID {{conf.clientid}}
		} 
	{%- endfor -%}

	proxy_set_header X-Orig-Host $host;
	proxy_set_header Connection "";
	proxy_set_header Host $http_host;
	proxy_http_version 1.1;
	proxy_ignore_client_abort on;
	proxy_buffering off;

	##################
	# figure all the cases where a redirect loop can occur and treat them here
	##################
	if ($http_x_rev_nodes ~ TESTSJC20-BP05) {
	return 508 "A redirection loop was detected on 'TESTSJC20-BP05'. Please review the server configuration.";
	}

	location / {
		proxy_pass https://https_varnish_local/;
		# Wait at most for configured seconds for a reply from Varnish, then return error message.
		proxy_read_timeout 20s;
	}
}

server {
	listen 127.0.0.1:9443;
	access_log off; 

	# display all the keys
	{%- for conf in all_configs -%}
		server_name {{conf.key}};
	{%- endfor -%}

	proxy_set_header Connection "";
	proxy_http_version 1.1;
	proxy_ignore_client_abort on;
	proxy_buffering off;
	
	set $origin_proto "https";

	if ($http_x_rev_proto) {
		set $origin_proto $http_x_rev_proto;
	}

	if ($origin_proto !~ "^(http|https)$") {
		return 400 "X-Rev-Proto HTTP request header can be either 'http' or 'https'";
	}

	location / {
		proxy_pass $origin_proto://$http_x_rev_host$uri$is_args$args;
		proxy_set_header Host $http_x_rev_host;
	}
}


